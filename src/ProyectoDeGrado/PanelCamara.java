/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelCamara.java
 *
 * Created on 06-mar-2012, 21:40:34
 */
package ProyectoDeGrado;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author 
 */
public class PanelCamara extends javax.swing.JPanel implements LoginPassCam{

    private boolean hayConexion;
    private String direccionIP = "";
    public static URLConnection connection;
    ConexionCamara conexionCamara = new ConexionCamara();
    private URLConnection urlConnection;
  
   // private String arriba = "";
    
    public BufferedImage frame = null;

    public PanelCamara() 
    {
        initComponents();
    }

    public boolean isHayConexion() {
        return hayConexion;
    }

    public void setHayConexion(boolean hayConexion) {
        this.hayConexion = hayConexion;
    }

    public String getDireccionIP() {
        return direccionIP;
    }

    public void setDireccionIP(String direccionIP) {
        this.direccionIP = direccionIP;
    }
   
   
    @Override
    public void paintComponent(Graphics g) {
 
        Graphics2D g2 = (Graphics2D) g;
        g2.setColor(Color.DARK_GRAY);
        g2.fillRect(0, 0, getWidth(), getHeight());
        if (hayConexion) {
            try {			             
                conexionCamara.setUrLConnection(direccionIP);
                urlConnection = conexionCamara.getUrLConnection();
                frame = ImageIO.read(urlConnection.getInputStream());
                if (frame != null) {
                    g2.drawImage(frame, 0, 0, this);
                    repaint();
                }
            } catch (MalformedURLException ex) {
                
                JOptionPane.showMessageDialog(null,"No se estableció conexión con la cámara");
//                System.out.println("Mensaje de MalFormed"+ex.getMessage());
                  //hayConexion = false;
//               g2.setFont(new Font ("TimesRoman", Font.PLAIN, 20));
         
//                g2.setColor(Color.DARK_GRAY);
//                g2.fillRect(0, 0, getWidth(), getHeight());
              // g2.drawString(ex.toString(), 5, 15);
//               g2.drawString("No se estableció comunicación con el dispositivo.", 5, 19);
//               g2.drawString("Por favor verifique su conexión.", 15, 35);
            } catch (IOException ex) {
                
                System.out.print(ex.getMessage());
                //JOptionPane.showMessageDialog(null,"No se estableció conexión con la cámara");
//                System.out.println("Mensaje de IOException"+ex.getMessage());
                  //hayConexion = false;
//                g2.setFont(new Font ("TimesRoman", Font.PLAIN, 20));
//                //JOptionPane.showMessageDialog(null,"No hay conexión");
//                  g2.setColor(Color.DARK_GRAY);
//                  g2.fillRect(0, 0, getWidth(), getHeight());
                  
//               //g2.drawString(ex.toString(), 5, 15);
//               g2.drawString("No se estableció comunicación con el dispositivo.", 5, 19);
//               g2.drawString("Por favor verifique su conexión.", 15, 35);
                //JOptionPane.showMessageDialog(null,"No hay conexión");
            }
        }
        
        else {

           // g2.setColor(Color.black);
            //JOptionPane.showMessageDialog(null,"No hay conexión");
             //g2.drawString("Si no se establece comunicación con el dispositivo por favor verifique.", 5, 15);
            
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        setMaximumSize(new java.awt.Dimension(640, 352));
        setMinimumSize(new java.awt.Dimension(640, 352));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(640, 352));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 636, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 348, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public static URLConnection getUrlConnection() {
        return connection;
    }

    public static void setUrlConnection(URLConnection urlConnection) {
        PanelCamara.connection = urlConnection;
    }

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    

}
